//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

long long numOfWays(int n, int m);

int main() {
    // code
    int T;
    cin >> T;
    while (T--) {
        int n, m;
        cin >> n >> m;
        cout << numOfWays(n, m) << endl;
    }
    return 0;
}
// } Driver Code Ends


//Function to find out the number of ways we can place a black and a 
//white Knight on this chessboard such that they cannot attack each other.
long long numOfWays(int n, int m)
{   
    
        int dx[8] = {2,2,1,1,-1,-1,-2,-2};
        int dy[8] = {-1,-1,-2,2,-2,2,-1,1};

        long mod = 1000000007;
        long total = ((m*n)%mod * (m*n-1)%mod)%mod;
        long attack = 0;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                // traversing for 8 attack
                for(int k=0;k<8;k++){
                    int x = i+dx[k];
                    int y = j+dy[k];

                    if(x>=0 && x<n && y>=0 && y<m){
                        attack++;
                    }
                }
            }
        }
        
        return (total%mod - attack%mod)%mod;
}