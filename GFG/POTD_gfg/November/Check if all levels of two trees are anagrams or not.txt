

class Solution{
    public:
    bool areAnagrams(Node *root1, Node *root2)
    {
        if(!root1 && !root2)    return true;
        if(!root1 || !root2)    return false;
        
        queue<Node*>q1,q2;
        
        q1.push(root1);
        q2.push(root2);
        
        while(1){
            
            int size1 = q1.size();
            int size2 = q2.size();
            
            if(size1 != size2)  return false;
            if(size1 == 0)  break;
            
            vector<int>v1,v2;
            
            while(size1--){
                
                Node* temp1 = q1.front();
                Node* temp2 = q2.front();
                
                q1.pop();
                q2.pop();
                
                v1.push_back(temp1->data);
                v2.push_back(temp2->data);
                
                if(temp1->left) q1.push(temp1->left);
                if(temp1->right) q1.push(temp1->right);
                
                if(temp2->left) q2.push(temp2->left);
                if(temp2->right) q2.push(temp2->right);
                
            }
            
            reverse(v2.begin(),v2.end());
            if(v1 != v2)
                return false;
        }
        
        return true;
    
    }
};