
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        
        if(root1 != NULL && root2 != NULL){
            
            TreeNode* mergeRoot = new TreeNode(root1->val + root2->val);
                // left call
            mergeRoot->left = mergeTrees(root1->left,root2->left);
            // right call
            mergeRoot->right = mergeTrees(root1->right,root2->right);
            
            return mergeRoot;
        }
        else{
            return root1 ? root1 : root2;
        }
    }
};