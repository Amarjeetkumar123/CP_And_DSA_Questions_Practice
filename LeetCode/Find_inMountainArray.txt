Question Link : https://leetcode.com/problems/find-in-mountain-array/

code: 


/**
 * // This is the MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * class MountainArray {
 *   public:
 *     int get(int index);
 *     int length();
 * };
 */

class Solution {
private:
    
    int peakElement(MountainArray &a , int n){
        
        int s = 0;
        int e = n-1;
        int ans = -1;
        
        while(s <= e){
            
            int mid = (s+e)/2;
            
            if(a.get(mid) < a.get(mid+1)){
                s = mid+1;
            }
            else{
                e = mid-1;
                ans = mid;   
            }
        }
        return ans;
    }
    
    int FromLeft(MountainArray &a , int s , int e , int target){
        
        while(s <= e){
            int mid = (s+e)/2;
            
            if(a.get(mid) == target){
                return mid;
            }
            
           else if(a.get(mid) < target){
                s = mid+1;
            }
            else{
                e = mid-1;
            }
        }
        
        return -1;
    }
    
    
    int FromRight(MountainArray &a , int s , int e , int target){
        
        while(s <= e){
            int mid = (s+e)/2;
            
            if(a.get(mid) == target){
                return mid;
            }
            
           else if(a.get(mid) > target){
                s = mid+1;
            }
            else{
                e = mid-1;
            }
        }
        return -1;
    }
    
    
public:
    int findInMountainArray(int target, MountainArray &mountainArr) {
        
        int n = mountainArr.length();
        int k = peakElement(mountainArr , n);
        
         
         int ans = FromLeft(mountainArr , 0 , k , target);
        
         if(ans != -1)
              return ans;
        
         return FromRight(mountainArr , k+1 , n-1 , target);
        
         
    }
};