Question Link : https://leetcode.com/problems/partition-array-into-disjoint-intervals/

Solution Code üëç

class Solution {
public:
    int partitionDisjoint(vector<int>& nums) {
        
        int n = nums.size();
        
        int left_max, curr_max, ans = 1;
        
        left_max = curr_max = nums[0];
        
        for(int i = 1; i < n; i++){
            
            if(nums[i] < left_max){
                left_max = curr_max;
                ans = i + 1;
            }
            else if(nums[i] > curr_max){
                curr_max = nums[i];                
            }
        }
        return ans;
    }
};

-------------------------------------------------------------------
modify code : 


class Solution {
public:
    int partitionDisjoint(vector<int>& a) {
        int n = a.size();
        int length = 0;
        int current_max = a[0], left_max = a[0];

        for (int i = 1; i < n; i++) {
            current_max = max(a[i], current_max);

            if (a[i] < left_max) {
                length = i;
                left_max = current_max;
            }
        }
        return length + 1;
    }
};

