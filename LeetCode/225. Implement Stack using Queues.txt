
// Implement Stack using one queue

class MyStack {
public:
    MyStack() {
        
    }
    queue<int>q;
    
    void push(int x) {
        q.push(x);
        // rotating the queue until the new element is at the front (i.e., size-1 times move the front element to the back) 
        for(int i=1;i<q.size();i++){
            q.push(q.front());
            q.pop();
        }
    }
    
    int pop() {
        
        int temp = q.front();
        q.pop();
        return temp;
    }
    
    int top() {
        
        return q.front();
    }
    
    bool empty() {
        
        return q.empty();
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */


------------------------------------------------------------------------------------------------------------

Implement Stack using 2 queue

