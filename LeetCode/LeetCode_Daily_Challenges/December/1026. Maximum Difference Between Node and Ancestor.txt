/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res = 0;

    void solve(TreeNode* root , int mx , int mn){
        
        if(!root)
            return;

        if(mx != INT_MIN)
            res = max(res,abs(mx - root->val));

        if(mn != INT_MAX)
            res = max(res,abs(root->val - mn));

        mx = max(mx,root->val);
        mn = min(mn,root->val);

        solve(root->left,mx,mn);
        solve(root->right,mx,mn);

    }

    int maxAncestorDiff(TreeNode* root) {
        
        int mx = INT_MIN, mn = INT_MAX;
        solve(root,mx,mn);
        return res;
    }
};