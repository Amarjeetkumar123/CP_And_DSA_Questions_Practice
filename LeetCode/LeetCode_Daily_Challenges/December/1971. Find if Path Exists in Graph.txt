class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        
        // using bfs

        unordered_map<int , vector<int>>adj;
        
        for(int i=0;i<edges.size();i++){
            int u = edges[i][0];
            int v = edges[i][1];

            adj[u].push_back(v);
            adj[v].push_back(u);
        }

        vector<bool>visited(n,false);
        queue<int>q;

        q.push(source);
        visited[source] = true;
        while(!q.empty()){

            int node = q.front();
            q.pop();

            if(node == destination)
                return true;

            for(auto &nbr : adj[node]){
                
                if(!visited[nbr]){
                    visited[nbr] = true;
                    q.push(nbr);
                }
            }
        }

        return false;
    }
};